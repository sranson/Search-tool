{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","placeholder","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","alt_description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"0NAKeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2D,OC4BRC,E,4MA9BXC,MAAQ,CAAEC,KAAM,I,EAGhBC,aAAe,SAACC,GACZA,EAAMC,iBAGN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,4CAGnC,WAAU,IAAD,OACL,OACI,qBAAKM,UAAU,aAAf,SACI,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACI,sBAAKA,UAAU,QAAf,UACI,iDACI,uBACIE,KAAK,OACLC,YAAY,oBACZC,MAAOH,KAAKR,MAAMC,KAClBW,SAAW,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEb,KAAMY,EAAEE,OAAOJ,sB,GAtBvDK,IAAMC,WC4BfC,G,wDA3BX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IASVc,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAAEU,MAAOA,KAXvB,EAAKxB,MAAQ,CAAEwB,MAAO,GACtB,EAAKH,SAAWL,IAAMW,YAHP,E,qDAMnB,WACInB,KAAKa,SAASC,QAAQM,iBAAiB,OAAQpB,KAAKW,Y,oBASxD,WACI,MAAgCX,KAAKH,MAAMwB,MAApCC,EAAP,EAAOA,gBAAiBC,EAAxB,EAAwBA,KACxB,OACI,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUzB,KAAKR,MAAMwB,QAA7C,SACI,qBAAKU,IAAK1B,KAAKa,SAAUc,IAAKL,EAAiBM,IAAKL,EAAKM,gB,GArBjDrB,IAAMC,YCUfqB,EATG,SAAAjC,GAEd,IAAMkC,EAASlC,EAAMkC,OAAOC,KAAI,SAACX,GAC7B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAGjC,OAAO,qBAAKlC,UAAU,aAAf,SAA6BgC,KCkBzBG,E,4MArBX1C,MAAQ,CAAEuC,OAAQ,I,EAElBI,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEACSC,EAASC,IAAI,iBAAkB,CACjDC,OAAQ,CAAEC,MAAO/C,KAFR,OACRgD,EADQ,OAKb,EAAKnC,SAAS,CAAEyB,OAAQU,EAASC,KAAKC,UALzB,2C,kGAQjB,WACI,OACI,sBAAK5C,UAAU,eAAeyB,MAAO,CAACoB,UAAW,QAAjD,UACI,cAAC,EAAD,CAAY9C,SAAUE,KAAKmC,iBAC3B,cAAC,EAAD,CAAWJ,OAAQ/B,KAAKR,MAAMuC,gB,GAhB5BvB,IAAMC,WCCxBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.96296660.chunk.js","sourcesContent":["import axios from 'axios';\n\n\n\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID Jka735JO2x_3jcuOjhmaUzQT9CKGuTgoe4_rXW59OwQ'\n    }, \n});","import React from 'react';\n\n\n\nclass SearchBar extends React.Component {\n\n    state = { term: ''};\n\n    // It is important to use the Arrow Function here so that the 'this' keyword points to the SearchBar class - will get 'undefined otherwise'\n    onFormSubmit = (event) => {\n        event.preventDefault();             \n        // Props is referring to a function in the parent component (App.js) that was passed down to child component (SearchBar) as a prop\n        // This prop/function takes in 'term' as an argument\n        this.props.onSubmit(this.state.term);           \n    };\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                            <input \n                                type=\"text\" \n                                placeholder=\"Search for a term\"\n                                value={this.state.term} \n                                onChange={ e => this.setState({ term: e.target.value })} \n                            />\n                    </div>\n                </form>\n            </div>\n        );\n    };\n};\n\n\nexport default SearchBar;","import React from 'react';\nimport './ImageList.css';\n\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { spans: 0 };\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n        this.setState({ spans: spans })\n    }\n\n    render() {\n        const {alt_description, urls} = this.props.image;\n        return(\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt={alt_description} src={urls.regular} />\n            </div>\n        )\n    }\n}\n\n\nexport default ImageCard;\n","import React from 'react';\nimport ImageCard from './ImageCard'; \n\n\n\nconst ImageList = props => {\n    // console.log(props);\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image}/>\n    });\n\n    return <div className=\"image-list\">{images}</div>\n}\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\n\nclass App extends React.Component {\n\n    state = { images: [] };\n   \n    onSearchSubmit = async (term) => {\n       const response = await unsplash.get('/search/photos', {\n            params: { query: term }, \n       });\n\n        this.setState({ images: response.data.results });\n    }\n\n    render() { \n        return (\n            <div className=\"ui container\" style={{marginTop: \"10px\"}}>\n                <SearchBar  onSubmit={this.onSearchSubmit} />\n                <ImageList images={this.state.images} />\n            </div>\n        );\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}